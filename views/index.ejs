<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Love Message</title>
    <style>
      body {
        margin: 0;
        padding: 0;
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #ffd6e7;
        font-family: "Arial", sans-serif;
      }

      .card {
        background: white;
        padding: 2rem;
        border-radius: 20px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        text-align: center;
        max-width: 500px;
        width: 90%;
      }

      .image-container {
        margin-bottom: 2rem;
        width: 300px;
        height: 300px;
        margin: 0 auto 2rem auto;
        position: relative;
      }

      .image-container img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
        border-radius: 10px;
      }

      h2 {
        color: #ff69b4;
        margin-bottom: 2rem;
        font-size: 2rem;
      }

      .buttons {
        display: flex;
        justify-content: center;
        gap: 2rem;
        margin-top: 2rem;
        position: relative;
        min-height: 150px; /* Space for button movement */
      }

      .btn {
        padding: 1rem 3rem;
        font-size: 1.2rem;
        border: none;
        border-radius: 50px;
        cursor: pointer;
        transition: transform 0.3s, background-color 0.3s;
      }

      .btn-yes {
        background-color: #ff69b4;
        color: white;
        position: absolute;
        left: 55px;
        top: -2px;
      }

      .btn-yes:hover {
        background-color: #ff1493;
        transform: scale(1.1);
      }

      .btn-no {
        background-color: #cccccc;
        color: white;
        position: absolute;
        transition: all 0.5s ease;
        z-index: 1;
      }

      /* Modal styles */
      .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
      }

      .modal.show {
        display: flex;
        justify-content: center;
        align-items: center;
        opacity: 1;
      }

      .modal-content {
        background: white;
        padding: 2rem;
        border-radius: 20px;
        text-align: center;
        max-width: 400px;
        width: 90%;
        position: relative;
        transform: scale(0.7);
        opacity: 0;
        transition: all 0.3s ease-in-out;
      }

      .modal.show .modal-content {
        transform: scale(1);
        opacity: 1;
      }

      .modal-heart {
        color: #ff69b4;
        font-size: 4rem;
        margin-bottom: 1rem;
        animation: heartBeat 1.5s infinite;
      }

      .modal-message {
        color: #ff69b4;
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
      }

      .modal-close {
        background: #ff69b4;
        color: white;
        border: none;
        padding: 0.5rem 2rem;
        border-radius: 25px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.3s;
      }

      .modal-close:hover {
        background: #ff1493;
      }

      @keyframes heartBeat {
        0% {
          transform: scale(1);
        }
        14% {
          transform: scale(1.3);
        }
        28% {
          transform: scale(1);
        }
        42% {
          transform: scale(1.3);
        }
        70% {
          transform: scale(1);
        }
      }

      /* Falling hearts animation */
      .hearts-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1001;
        display: none;
      }

      .hearts-container.show {
        display: block;
      }

      .heart {
        position: absolute;
        font-size: 20px;
        color: #ff69b4;
        animation: falling linear infinite;
      }

      @keyframes falling {
        0% {
          transform: translateY(-10%) rotate(0deg);
        }
        100% {
          transform: translateY(100vh) rotate(360deg);
        }
      }

      /* Responsive adjustments */
      @media (max-width: 500px) {
        .image-container {
          width: 250px;
          height: 250px;
        }
      }
    </style>
  </head>
  <body>
    <div class="card">
      <div class="image-container">
        <% images.forEach((image, index) => { %>
        <img
          src="/img/<%= image %>"
          alt="Love GIF"
          style="display: <%= index === 0 ? 'block' : 'none' %>"
        />
        <% }); %>
      </div>
      <h2>Do you love me?</h2>
      <div class="buttons">
        <button class="btn btn-yes" onclick="sayYes()">Yes</button>
        <button class="btn btn-no" id="noBtn">No</button>
      </div>
    </div>

    <!-- Modal Popup -->
    <div class="modal" id="loveModal">
      <div class="modal-content">
        <img src="/img/200w.gif" alt="love gif" />
        <div class="modal-message">
          I love you too! You make my heart complete!
        </div>
        <button class="modal-close" onclick="closeModal()">Close ‚ù§Ô∏è</button>
      </div>
    </div>

    <!-- Falling Hearts Container -->
    <div class="hearts-container" id="heartsContainer"></div>

    <script>
      let currentImage = 0;
      const images = document.querySelectorAll(".image-container img");
      const totalImages = images.length;

      // Change image every 3 seconds
      setInterval(() => {
        images[currentImage].style.display = "none";
        currentImage = (currentImage + 1) % totalImages;
        images[currentImage].style.display = "block";
      }, 3000);

      // Improved No button movement code
      const noBtn = document.getElementById("noBtn");
      const buttonsContainer = document.querySelector(".buttons");
      let isInitialPosition = true;

      // Set initial position
      noBtn.style.left = "70%";
      noBtn.style.transform = "translateX(-50%)";

      noBtn.addEventListener("mouseover", () => {
        const containerRect = buttonsContainer.getBoundingClientRect();
        const btnRect = noBtn.getBoundingClientRect();

        // Calculate safe boundaries (with padding)
        const padding = 20;
        const maxX = containerRect.width - btnRect.width - padding;
        const maxY = containerRect.height - btnRect.height - padding;

        // Generate random position
        let randomX = Math.random() * maxX;
        let randomY = Math.random() * maxY;

        // If it's the initial position, ensure the new position is significantly different
        if (isInitialPosition) {
          randomX = randomX < maxX / 2 ? randomX / 4 : randomX * 0.75;
          isInitialPosition = false;
        }

        // Apply new position with smooth transition
        noBtn.style.transform = "none";
        noBtn.style.left = `${randomX}px`;
        noBtn.style.top = `${randomY}px`;
      });

      function sayYes() {
        const modal = document.getElementById("loveModal");
        const heartsContainer = document.getElementById("heartsContainer");

        // Show modal with animation
        modal.classList.add("show");

        // Show falling hearts
        heartsContainer.classList.add("show");
        createFallingHearts();
      }

      function closeModal() {
        const modal = document.getElementById("loveModal");
        const heartsContainer = document.getElementById("heartsContainer");

        modal.classList.remove("show");
        heartsContainer.classList.remove("show");
        heartsContainer.innerHTML = "";
      }

      function createFallingHearts() {
        const container = document.getElementById("heartsContainer");
        const heartSymbols = ["‚ù§Ô∏è", "üíñ", "üíù", "üíï", "üíó"];

        // Create 50 falling hearts
        for (let i = 0; i < 50; i++) {
          const heart = document.createElement("div");
          heart.className = "heart";
          heart.style.left = Math.random() * 100 + "vw";
          heart.style.animationDuration = Math.random() * 3 + 2 + "s"; // Random duration between 2-5s
          heart.style.animationDelay = Math.random() * 3 + "s"; // Random delay
          heart.innerHTML =
            heartSymbols[Math.floor(Math.random() * heartSymbols.length)];
          container.appendChild(heart);
        }
      }
    </script>
  </body>
</html>
